# Flujo de trabajo de CI/CD para la ejecución de pruebas de Cypress y el despliegue
# de reportes de resultados a GitHub Pages.
name: Cypress Tests & Report Deployment

# Define el disparador del workflow: un push a la rama 'main'.
on:
  push:
    branches:
      - main

jobs:
  #================================================
  # JOB 1: Construcción y Ejecución de Pruebas
  #================================================
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        id: cypress_run
        uses: cypress-io/github-action@v6
        with:
          command: npm run cy:record
          record: true
        env:
          # --- Secretos para las pruebas ---
          BASE_URL: ${{ secrets.BASE_URL }}
          DEFAULT_USER_EMAIL: ${{ secrets.DEFAULT_USER_EMAIL }}
          DEFAULT_USER_PASSWORD: ${{ secrets.DEFAULT_USER_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Generate HTML report
        if: always()
        run: npm run report:gen

      - name: Upload HTML report for Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'cypress/reports/dashboard'

      # --- MODIFICACIÓN 1 ---
      # Sube el archivo results.json como un artifact para que otros jobs puedan usarlo.
      - name: Upload JSON report for email
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: json-report-artifact
          path: cypress/reports/results.json

  #================================================
  # JOB 2: Despliegue del Reporte a GitHub Pages
  #================================================
  deploy-report:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  #================================================
  # JOB 3: Envío de Notificación por Correo
  #================================================
  send-notification:
    name: Send Notification Email
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-report]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- MODIFICACIÓN 2 ---
      # Descarga el artifact con el archivo results.json en la carpeta correcta.
      - name: Download JSON report artifact
        uses: actions/download-artifact@v4
        with:
          name: json-report-artifact
          path: cypress/reports

      # --- MODIFICACIÓN 3 (Paso de Depuración) ---
      # Este comando nos mostrará si el archivo se descargó correctamente.
      - name: Verify downloaded files
        run: |
          echo "Verificando el contenido de la carpeta cypress/reports..."
          ls -R cypress/reports

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate Email Body
        run: node cypress/email/scripts/generate-email-body.js
        env:
          STATUS: ${{ needs.build-and-test.result }}
          PAGES_URL: ${{ needs.deploy-report.outputs.page_url }}
          CLOUD_URL: ${{ secrets.CLOUD_URL }}

      - name: Send Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: "Reporte de Pruebas Cypress - ${{ needs.build-and-test.result == 'success' && 'Éxito' || 'Fallo' }}"
          to: ${{ secrets.REPORT_RECIPIENTS }}
          from: Notificaciones Cypress <${{ secrets.SMTP_USER }}>
          html_body: file://email-body.html